
package com.certillion.api;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SignaturePortType", targetNamespace = "http://esec.com.br/mss/ap")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SignaturePortType {


    /**
     * 
     * @param validatePdfReq
     * @return
     *     returns com.certillion.api.ValidateRespType
     * @throws ICPMException
     */
    @WebMethod(operationName = "ValidatePdf")
    @WebResult(name = "ValidateResp", partName = "ValidateResp")
    public ValidateRespType validatePdf(
        @WebParam(name = "ValidatePdfReq", partName = "ValidatePdfReq")
        ValidatePdfReqType validatePdfReq)
        throws ICPMException
    ;

    /**
     * 
     * @param signatureStatusReq
     * @return
     *     returns com.certillion.api.SignatureStatusRespTypeV2
     * @throws ICPMException
     */
    @WebMethod(operationName = "StatusQueryV2")
    @WebResult(name = "SignatureStatusRespV2", partName = "SignatureStatusRespV2")
    public SignatureStatusRespTypeV2 statusQueryV2(
        @WebParam(name = "SignatureStatusReq", partName = "SignatureStatusReq")
        SignatureStatusReqType signatureStatusReq)
        throws ICPMException
    ;

    /**
     * 
     * @param simpleSignatureReqTypeV3
     * @return
     *     returns com.certillion.api.SimpleSignatureRespTypeV3
     * @throws ICPMException
     */
    @WebMethod(operationName = "SimpleSignatureV3")
    @WebResult(name = "SimpleSignatureRespTypeV3", partName = "SimpleSignatureRespTypeV3")
    public SimpleSignatureRespTypeV3 simpleSignatureV3(
        @WebParam(name = "SimpleSignatureReqTypeV3", partName = "SimpleSignatureReqTypeV3")
        SimpleSignatureReqTypeV3 simpleSignatureReqTypeV3)
        throws ICPMException
    ;

    /**
     * 
     * @param simpleSignatureReqTypeV2
     * @return
     *     returns com.certillion.api.SimpleSignatureRespTypeV2
     * @throws ICPMException
     */
    @WebMethod(operationName = "SimpleSignatureV2")
    @WebResult(name = "SimpleSignatureRespTypeV2", partName = "SimpleSignatureRespTypeV2")
    public SimpleSignatureRespTypeV2 simpleSignatureV2(
        @WebParam(name = "SimpleSignatureReqTypeV2", partName = "SimpleSignatureReqTypeV2")
        SimpleSignatureReqTypeV2 simpleSignatureReqTypeV2)
        throws ICPMException
    ;

    /**
     * 
     * @return
     *     returns com.certillion.api.BandwidthInfoType
     * @throws ICPMException
     */
    @WebMethod(operationName = "FindBandwidthInfo")
    @WebResult(name = "BandwidthInfoType", partName = "BandwidthInfoType")
    public BandwidthInfoType findBandwidthInfo()
        throws ICPMException
    ;

    /**
     * 
     * @param signatureStatusReqType
     * @return
     *     returns com.certillion.api.BatchSignatureStatusRespTypeV2
     * @throws ICPMException
     */
    @WebMethod(operationName = "BatchSignatureStatusV3")
    @WebResult(name = "BatchSignatureStatusRespTypeV2", partName = "BatchSignatureStatusRespTypeV2")
    public BatchSignatureStatusRespTypeV2 batchSignatureStatusV3(
        @WebParam(name = "SignatureStatusReqType", partName = "SignatureStatusReqType")
        SignatureStatusReqType signatureStatusReqType)
        throws ICPMException
    ;

    /**
     * 
     * @param batchSignatureStatusReq
     * @return
     *     returns com.certillion.api.BatchSignatureTIDsRespType
     * @throws ICPMException
     */
    @WebMethod(operationName = "BatchSignatureTIDsStatus")
    @WebResult(name = "BatchSignatureResp", partName = "BatchSignatureResp")
    public BatchSignatureTIDsRespType batchSignatureTIDsStatus(
        @WebParam(name = "BatchSignatureStatusReq", partName = "BatchSignatureStatusReq")
        SignatureStatusReqType batchSignatureStatusReq)
        throws ICPMException
    ;

    /**
     * 
     * @param validateReq
     * @return
     *     returns com.certillion.api.ValidateRespTypeV2
     * @throws ICPMException
     */
    @WebMethod(operationName = "ValidateV2")
    @WebResult(name = "ValidateRespV2", partName = "ValidateRespV2")
    public ValidateRespTypeV2 validateV2(
        @WebParam(name = "ValidateReq", partName = "ValidateReq")
        ValidateReqType validateReq)
        throws ICPMException
    ;

    /**
     * 
     * @param signatureComplexDocumentReq
     * @return
     *     returns com.certillion.api.SignatureRespType
     * @throws ICPMException
     */
    @WebMethod(operationName = "SignatureComplexDocument")
    @WebResult(name = "SignatureResp", partName = "SignatureResp")
    public SignatureRespType signatureComplexDocument(
        @WebParam(name = "SignatureComplexDocumentReq", partName = "SignatureComplexDocumentReq")
        SignatureComplexDocumentReqType signatureComplexDocumentReq)
        throws ICPMException
    ;

    /**
     * 
     * @param signatureTemplateReq
     * @return
     *     returns com.certillion.api.SignatureRespType
     * @throws ICPMException
     */
    @WebMethod(operationName = "SignatureByTemplate")
    @WebResult(name = "SignatureResp", partName = "SignatureResp")
    public SignatureRespType signatureByTemplate(
        @WebParam(name = "SignatureTemplateReq", partName = "SignatureTemplateReq")
        SignatureTemplateReqType signatureTemplateReq)
        throws ICPMException
    ;

    /**
     * 
     * @param batchSignatureReqTypeV2
     * @return
     *     returns com.certillion.api.BatchSignatureRespTypeV2
     * @throws ICPMException
     */
    @WebMethod(operationName = "BatchSignatureV2")
    @WebResult(name = "BatchSignatureRespTypeV2", partName = "BatchSignatureRespTypeV2")
    public BatchSignatureRespTypeV2 batchSignatureV2(
        @WebParam(name = "BatchSignatureReqTypeV2", partName = "BatchSignatureReqTypeV2")
        BatchSignatureReqTypeV2 batchSignatureReqTypeV2)
        throws ICPMException
    ;

    /**
     * 
     * @param signatureStatusReqType
     * @return
     *     returns com.certillion.api.BatchSignatureStatusRespType
     * @throws ICPMException
     */
    @WebMethod(operationName = "BatchSignatureStatusV2")
    @WebResult(name = "BatchSignatureStatusRespType", partName = "BatchSignatureStatusRespType")
    public BatchSignatureStatusRespType batchSignatureStatusV2(
        @WebParam(name = "SignatureStatusReqType", partName = "SignatureStatusReqType")
        SignatureStatusReqType signatureStatusReqType)
        throws ICPMException
    ;

    /**
     * 
     * @param findSignatureReq
     * @return
     *     returns com.certillion.api.SignatureStatusRespType
     * @throws ICPMException
     */
    @WebMethod(operationName = "FindSignature")
    @WebResult(name = "SignatureStatusReq", partName = "SignatureStatusReq")
    public SignatureStatusRespType findSignature(
        @WebParam(name = "FindSignatureReq", partName = "FindSignatureReq")
        FindSignatureReqType findSignatureReq)
        throws ICPMException
    ;

    /**
     * 
     * @param batchSignatureComplexDocumentReq
     * @return
     *     returns com.certillion.api.BatchSignatureComplexDocumentRespType
     * @throws ICPMException
     */
    @WebMethod(operationName = "BatchSignatureComplexDocument")
    @WebResult(name = "BatchSignatureComplexDocumentResp", partName = "BatchSignatureComplexDocumentResp")
    public BatchSignatureComplexDocumentRespType batchSignatureComplexDocument(
        @WebParam(name = "BatchSignatureComplexDocumentReq", partName = "BatchSignatureComplexDocumentReq")
        BatchSignatureComplexDocumentReqType batchSignatureComplexDocumentReq)
        throws ICPMException
    ;

    /**
     * 
     * @param signatureStatusReq
     * @return
     *     returns com.certillion.api.SignatureStatusRespType
     * @throws ICPMException
     */
    @WebMethod(operationName = "StatusQuery")
    @WebResult(name = "SignatureStatusReq", partName = "SignatureStatusReq")
    public SignatureStatusRespType statusQuery(
        @WebParam(name = "SignatureStatusReq", partName = "SignatureStatusReq")
        SignatureStatusReqType signatureStatusReq)
        throws ICPMException
    ;

    /**
     * 
     * @param signatureSimpleDocumentReq
     * @return
     *     returns com.certillion.api.SignatureRespType
     * @throws ICPMException
     */
    @WebMethod(operationName = "SignatureSimpleDocument")
    @WebResult(name = "SignatureResp", partName = "SignatureResp")
    public SignatureRespType signatureSimpleDocument(
        @WebParam(name = "SignatureSimpleDocumentReq", partName = "SignatureSimpleDocumentReq")
        SignatureSimpleDocumentReqType signatureSimpleDocumentReq)
        throws ICPMException
    ;

    /**
     * 
     * @param batchSignatureReq
     * @return
     *     returns com.certillion.api.BatchSignatureComplexDocumentRespType
     * @throws ICPMException
     */
    @WebMethod(operationName = "BatchSignature")
    @WebResult(name = "BatchSignatureComplexDocumentResp", partName = "BatchSignatureComplexDocumentResp")
    public BatchSignatureComplexDocumentRespType batchSignature(
        @WebParam(name = "BatchSignatureReq", partName = "BatchSignatureReq")
        BatchSignatureReqType batchSignatureReq)
        throws ICPMException
    ;

    /**
     * 
     * @param validateReq
     * @return
     *     returns com.certillion.api.ValidateRespType
     * @throws ICPMException
     */
    @WebMethod(operationName = "Validate")
    @WebResult(name = "ValidateResp", partName = "ValidateResp")
    public ValidateRespType validate(
        @WebParam(name = "ValidateReq", partName = "ValidateReq")
        ValidateReqType validateReq)
        throws ICPMException
    ;

}
