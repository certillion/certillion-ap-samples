
package br.com.esec.mss.ap;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SignaturePortType", targetNamespace = "http://esec.com.br/mss/ap")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SignaturePortType {


    /**
     * 
     * @param validatePdfReq
     * @return
     *     returns br.com.esec.mss.ap.ValidateRespType
     * @throws ICPMException
     */
    @WebMethod(operationName = "ValidatePdf")
    @WebResult(name = "ValidateResp", partName = "ValidateResp")
	ValidateRespType validatePdf(
			@WebParam(name = "ValidatePdfReq", partName = "ValidatePdfReq")
			ValidatePdfReqType validatePdfReq)
        throws ICPMException
    ;

    /**
     * 
     * @param batchSignatureStatusReq
     * @return
     *     returns br.com.esec.mss.ap.BatchSignatureTIDsRespType
     * @throws ICPMException
     */
    @WebMethod(operationName = "BatchSignatureTIDsStatus")
    @WebResult(name = "BatchSignatureResp", partName = "BatchSignatureResp")
	BatchSignatureTIDsRespType batchSignatureTIDsStatus(
			@WebParam(name = "BatchSignatureStatusReq", partName = "BatchSignatureStatusReq")
			SignatureStatusReqType batchSignatureStatusReq)
        throws ICPMException
    ;

    /**
     * 
     * @return
     *     returns br.com.esec.mss.ap.BandwidthInfoType
     * @throws ICPMException
     */
    @WebMethod(operationName = "FindBandwidthInfo")
    @WebResult(name = "BandwidthInfoType", partName = "BandwidthInfoType")
	BandwidthInfoType findBandwidthInfo()
        throws ICPMException
    ;

    /**
     * 
     * @param signatureComplexDocumentReq
     * @return
     *     returns br.com.esec.mss.ap.SignatureRespType
     * @throws ICPMException
     */
    @WebMethod(operationName = "SignatureComplexDocument")
    @WebResult(name = "SignatureResp", partName = "SignatureResp")
	SignatureRespType signatureComplexDocument(
			@WebParam(name = "SignatureComplexDocumentReq", partName = "SignatureComplexDocumentReq")
			SignatureComplexDocumentReqType signatureComplexDocumentReq)
        throws ICPMException
    ;

    /**
     * 
     * @param batchSignatureComplexDocumentReq
     * @return
     *     returns br.com.esec.mss.ap.BatchSignatureComplexDocumentRespType
     * @throws ICPMException
     */
    @WebMethod(operationName = "BatchSignatureComplexDocument")
    @WebResult(name = "BatchSignatureComplexDocumentResp", partName = "BatchSignatureComplexDocumentResp")
	BatchSignatureComplexDocumentRespType batchSignatureComplexDocument(
			@WebParam(name = "BatchSignatureComplexDocumentReq", partName = "BatchSignatureComplexDocumentReq")
			BatchSignatureComplexDocumentReqType batchSignatureComplexDocumentReq)
        throws ICPMException
    ;

    /**
     * 
     * @param findSignatureReq
     * @return
     *     returns br.com.esec.mss.ap.SignatureStatusRespType
     * @throws ICPMException
     */
    @WebMethod(operationName = "FindSignature")
    @WebResult(name = "SignatureStatusReq", partName = "SignatureStatusReq")
	SignatureStatusRespType findSignature(
			@WebParam(name = "FindSignatureReq", partName = "FindSignatureReq")
			FindSignatureReqType findSignatureReq)
        throws ICPMException
    ;

    /**
     * 
     * @param signatureTemplateReq
     * @return
     *     returns br.com.esec.mss.ap.SignatureRespType
     * @throws ICPMException
     */
    @WebMethod(operationName = "SignatureByTemplate")
    @WebResult(name = "SignatureResp", partName = "SignatureResp")
	SignatureRespType signatureByTemplate(
			@WebParam(name = "SignatureTemplateReq", partName = "SignatureTemplateReq")
			SignatureTemplateReqType signatureTemplateReq)
        throws ICPMException
    ;

    /**
     * 
     * @param signatureStatusReq
     * @return
     *     returns br.com.esec.mss.ap.SignatureStatusRespType
     * @throws ICPMException
     */
    @WebMethod(operationName = "StatusQuery")
    @WebResult(name = "SignatureStatusReq", partName = "SignatureStatusReq")
	SignatureStatusRespType statusQuery(
			@WebParam(name = "SignatureStatusReq", partName = "SignatureStatusReq")
			SignatureStatusReqType signatureStatusReq)
        throws ICPMException
    ;

    /**
     * 
     * @param signatureSimpleDocumentReq
     * @return
     *     returns br.com.esec.mss.ap.SignatureRespType
     * @throws ICPMException
     */
    @WebMethod(operationName = "SignatureSimpleDocument")
    @WebResult(name = "SignatureResp", partName = "SignatureResp")
	SignatureRespType signatureSimpleDocument(
			@WebParam(name = "SignatureSimpleDocumentReq", partName = "SignatureSimpleDocumentReq")
			SignatureSimpleDocumentReqType signatureSimpleDocumentReq)
        throws ICPMException
    ;

    /**
     * 
     * @param validateReq
     * @return
     *     returns br.com.esec.mss.ap.ValidateRespType
     * @throws ICPMException
     */
    @WebMethod(operationName = "Validate")
    @WebResult(name = "ValidateResp", partName = "ValidateResp")
	ValidateRespType validate(
			@WebParam(name = "ValidateReq", partName = "ValidateReq")
			ValidateReqType validateReq)
        throws ICPMException
    ;

}
